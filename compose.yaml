services:
  base:
    image: mobile-robots-project:latest
    build:
      context: .
      dockerfile: Dockerfile
      args:
        ROS_DISTRO: humble
      # target: base
    stdin_open: true
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /tmp/.docker.xauth:/tmp/.docker.xauth:rw
      - "/dev:/dev"
      - type: bind
        source: /dev
        target: /dev
    device_cgroup_rules:
      - 'c *:* rmw'
    tty: true
    network_mode: host
    ipc: host
    privileged: true
    environment:
      - ROS_DOMAIN_ID=87
      - ROS_MASTER_URI=http://localhost:11311
      - DISPLAY=$DISPLAY
      - QT_X11_NO_MITSHM=1
      # - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
    # command: /bin/bash -c "source ./install/setup.bash" && ros2 run ariaPackage ariaPackage -rp /dev/ttyUSB0
    command: ros2 launch master_package main.launch.py
    # command: /bin/bash -c "source ./install/setup.bash" && ros2 run ariaNode ariaNode -rp /dev/ttyUSB0 && ros2 interface show geometry_msgs/msg/Twist
    # command: ros2 run ariaNode ariaNode && ros2 topic pub /cmd_vel geometry_msgs/msg/Twist "{linear: {x: 0.5, y: 0.0, z: 0.0}, angular: {x: 0.0, y: 0.0, z: 0.0}}"
  aria:
    image: mobile-robots-project
    build: .
    volumes:
      - type: bind
        source: /dev
        target: /dev
    # depends_on:
    # - base
    device_cgroup_rules:
      - 'c *:* rmw'
    environment:
      - ROS_DOMAIN_ID=87
      - ROS_MASTER_URI=http://localhost:11311
    # command: ros2 run joy joyNode && ros2 launch teleop_twist_joy teleop-launch.py
    command: ros2 run ariaNode ariaNode -rp /dev/ttyUSB0
  camera:
    image: mobile-robots-project:latest
    build: .
    volumes:
      - type: bind
        source: /dev/bus/usb
        target: /dev/bus/usb
    device_cgroup_rules:
      - 'c *:* rmw'
    environment:
      - ROS_DOMAIN_ID=87
      - ROS_MASTER_URI=http://localhost:11311
    command: ros2 launch depthai_ros_driver camera.launch.py
  # rviz:
  #     image: mobile-robots-project:latest
  #     network_mode: host
  #     command: ros2 launch master_package rviz.launch.py
  #     privileged: True
  #     environment:
  #       - DISPLAY
  #     volumes:
  #       - /tmp/.X11-unix:/tmp/.X11-unix:rw
  #       - /tmp/.docker.xauth:/tmp/.docker.xauth:rw
  #       - type: bind
  #         source: /dev/shm
  #         target: /dev/shm
  lidar:
    image: mobile-robots-project:latest
    build: .
    # depends_on:
    # - base
    volumes:
      - type: bind
        source: /dev
        target: /dev
    device_cgroup_rules:
      - 'c *:* rmw'
    environment:
      - ROS_DOMAIN_ID=87
      - ROS_MASTER_URI=http://localhost:11311
    command: ros2 launch sick_scan_xd sick_tim_7xx.launch.py
  imu:
    image: mobile-robots-project:latest
    build: .
    # depends_on:
    # - base
    volumes:
      - type: bind
        source: /dev
        target: /dev
    device_cgroup_rules:
      - 'c *:* rmw'
    environment:
      - ROS_DOMAIN_ID=87
      - ROS_MASTER_URI=http://localhost:11311
    command: ros2 launch phidgets_spatial spatial-launch.py

  # nav2:
  #   image: mobile-robots-project:latest
  #   build: .

  #   volumes:
  #     - type: bind
  #       source: /dev
  #       target: /dev
  #   # args:
  #   #   OVERLAY_MIXINS: "release ccache lld"
  #   device_cgroup_rules:
  #     - 'c *:* rmw'
  #   environment:
  #     - ROS_DOMAIN_ID=87
  #     - ROS_MASTER_URI=http://localhost:11311
  #   command: ros2 launch nav2_bringup tb3_simulation_launch.py slam:=True
  # rosbag-snapshot:
  #   image: mobile-robots-project:latest
  #   build: .
  #   volumes:
  #     - type: bind
  #       source: /dev
  #       target: /dev
  #   device_cgroup_rules:
  #     - 'c *:* rmw'
  #   environment:
  #     - ROS_DOMAIN_ID=87
  #     - ROS_MASTER_URI=http://localhost:11311
  #   # command: ros2 bag record -o rosbag_recording2 /cmd_vel /oak/rgb/image_raw /imu/data_raw /map /pose /scan
  #   # --ros-args --params-file param/multiple_topics.params.yaml
  #   command: ros2 run rosbag2_snapshot snapshotter_client --ros-args --params-file /project/install/rosbag2_snapshot/share/rosbag2_snapshot/param/multiple_topics.params.yaml
  #   # command: ros2 service call /trigger_snapshot rosbag2_snapshot_msgs/srv/TriggerSnapshot "{filename:='', topics:=['/rgb/image_raw'], start_time:={sec:=0, nanosec:=0}, stop_time:={sec:=0, nanosec:=0}}"
  m-explore:
    image: mobile-robots-project:latest
    build: .
    stdin_open: true
    tty: true
    volumes:
      - type: bind
        source: /dev
        target: /dev
    device_cgroup_rules:
      - 'c *:* rmw'
    environment:
      - ROS_DOMAIN_ID=87
      - ROS_MASTER_URI=http://localhost:11311
    command: ros2 launch explore_lite explore.launch.py
  # m-explore:
  #   build: .
  #     # context: ../
  #     # dockerfile: Dockerfile
  #   # working_dir: /workspace/ros_ws
  #   # user: dev

  #   network_mode: host
  #   ports:
  #     - "80:80"
  #   expose:
  #     - 80

  #   init: true
  #   privileged: true

  #   environment:
  #     - DISPLAY=$DISPLAY
  #     - QT_X11_NO_MITSHM=1
  #     - UDEV=1
  #   volumes:
  #     # Update this to wherever you want VS Code to mount the folder of your project
  #     # - ..:/workspace/ros_ws/src/m-explore-ros2
  #     # Forwards the local Docker socket to the container.
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     # Enable GUI environments
  #     - /tmp/.X11-unix:/tmp/.X11-unix:rw
  #     - type: bind
  #       source: /dev
  #       target: /dev

  #   # devices:
  #   #   - /dev/bus/usb:/dev/bus/usb
  #   #   # NVIDIA drivers to use OpenGL, etc...
  #   #   - /dev/nvidia0:/dev/nvidia0
  #   #   - /dev/nvidiactl:/dev/nvidiactl
  #   #   - /dev/nvidia-uvm:/dev/nvidia-uvm
  #   #   - /dev/input:/dev/input
  #   #   - /dev/snd:/dev/snd
  #   device_cgroup_rules:
  #     - 'c *:* rmw'

  #   # Uncomment the next four lines if you will use a ptrace-based debuggers like C++, Go, and Rust.
  #   cap_add:
  #     - SYS_PTRACE
  #   security_opt:
  #     - seccomp:unconfined

  #   # Overrides default command so things don't shut down after the process ends.
  #   stdin_open: true
  #   tty: true

  #   command: ros2 launch explore_lite explore.launch.py